% \iffalse meta-comment
% !TEX program  = pdfLaTeX
%
% Copyright (C) 2019 by James Cooper, University of Auckland <jcoo092@aucklanduni.ac.nz>
% ---------------------------------------------------------------------------
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is James Cooper, University of Auckland.
%
% This work consists of the files cpsystems.dtx and cpsystems.ins
% and the derived filebase cpsystems.sty, cpsystems.pdf and README.txt.
%
% \fi
% \iffalse
%<*readme>
%%cpsystems LaTeX package
%%Copyright (C) 2019 by James Cooper, University of Auckland <jcoo092@aucklanduni.ac.nz>
%%
%%The goal of this work is to provide a self-contained, easy-to-use LaTeX package that eases the typesetting of cP systems, a variant of Membrane Computing/P systems created by Dr. Radu Nicolescu and collaborators in the early 2010s.  Please refer to the package documentation for instructions on its use.  To the best of my knowledge, it is compatible with all LaTeX2e distributions which are reasonably up-to-date, as well as all classes (and likely all or almost all packages) that are typically used for publishing material on P systems.
%%
%%For more on cP systems, please see for example:  Nicolescu, R., & Henderson, A. (2018). An Introduction to cP Systems. In C. Graciani, A. Riscos-Núñez, G. Păun, G. Rozenberg, & A. Salomaa (Eds.), Enjoying Natural Computing: Essays Dedicated to Mario de Jesús Pérez-Jiménez on the Occasion of His 70th Birthday (pp. 204–227). https://doi.org/10.1007/978-3-030-00265-7_17
%%
%%This work consists of the file cpsystems.dtx, cpsystems.ins and their derived products cpsystems.sty, cpsystems.pdf and this README.  The `canonical' version of this work is currently to be found at https://github.com/jcoo092/LaTeX-cP-systems/ 
%%
%%Constructive pull requests, creation of issues for bugs, and suggestions for improvements are very welcome.
%%
%%This package was originally created to assist me while writing a paper on cP systems which should also largely re-appear in my PhD dissertation.  While you are certainly free to peruse and use this package, if you don't know what Membrane Computing/P systems is, this package is unlikely to be of much use to you.
%</readme>
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{cpsystems.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[2017/01/01]
%<package>\ProvidesPackage{cpsystems}
%<*package>
[2019/12/31 v0.12 Package to aid in typesetting cP systems 
	rulesets, following Nicolescu's standard style]
%</package>
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{cpsystems}[2019/12/31 v0.12]
\EnableCrossrefs
\CodelineIndex
\RecordChanges
%\OnlyDescription %Leave this commented out unless you have read the Doc documentation and know what you're doing
\begin{document}
  \DocInput{cpsystems.dtx}
  \PrintIndex
  \PrintChanges
\end{document}
%</driver>
% \fi
%
%
%\changes{0.12}{2019/12/31}{Completed documentation for first DTX format attempt}
% \changes{0.11}{2019/12/27}{Converted to DTX file}
%
% \DoNotIndex{\[, \{, \], \}, \\}
%
% \DoNotIndex{\arabic, \arraystretch, \begin, \big, \DeclareFloatingEnvironment,\end,\hspace,\item,\NeedsTeXFormat,\neg,\newcommand,\newcounter,
%	\newenvironment,\ProvidesPackage,\refstepcounter,\renewcommand,\RequirePackage,\rightarrow,\trim@spaces@noexp}
%
% \providecommand*{\url}{\texttt}
% \GetFileInfo{cpsystems.dtx}
% \title{The \textsf{cpsystems} \LaTeX{} package}
% \author{James Cooper, University of Auckland \\ \url{jcoo092@aucklanduni.ac.nz}}
% \date{\fileversion, \filedate}
%
% \maketitle
%
% \begin{abstract}
%	A package to assist authors writing about cP~systems in typesetting their papers.  It comprises a handful of environments and macros that are intended to ease writing about cP~systems, and just as importantly, reduce the frequency of errors in their presentation.  It is recommended to all authors using LaTeX to write about cP~systems.  Even if you don't want to use it, looking at the implementation details may give you some ideas for your own style.
% \end{abstract}
%
% \section{Introduction}
% This package was originally created by James Cooper to help with typesetting a paper on cP~systems (specifically one about modelling Belief Propagation in cP~systems).  The same commands had been copied from paper to paper, and across sections within papers, as most of them weren't made into proper \LaTeX{} macros.  This was, of course, extremely error prone, with formatting errors (and worse) sometimes making it into published articles.
% 
% The commands in this package in many cases are not necessarily less verbose than simply typing out the commands inside the macros.  They are more `robust'\footnote{Note that \LaTeX{} has its own, different, concept of ``robust''.}, however, in that by using the defined macros the exact same commands are applied each time so there is greater consistency.  If the macro is mistyped, the (La)\TeX{} engine itself will report the error.  They also hopefully should add greater structure to a paper and prove useful in editing.
% 
%
% \section{Usage}
%
% Put text here.   Note that this section is currently woefully under-complete. 
%
%
% \DescribeEnv{cpruleset}
%  Goes inside a |cprulesetfloat|
%
% \DescribeEnv{cpobjects}
%
%
% \DescribeMacro{\cprule}
% |\cprule| \marg{Starting state} \marg{Input objects} \marg{Mode of operation} \marg{Ending state} \marg{Output objects}
%
% \DescribeMacro{\cppromoter}
%
%
% \DescribeMacro{\cpinhibitor}
%
%
% \DescribeMacro{\cpsend}
%
%
% \DescribeMacro{\cprecv}
%
%
% \DescribeMacro{\cpfunc}
%
%
% \DescribeMacro{\cpobjectsline}
%
%
% \DescribeMacro{\cpterm}
%
%
% \StopEventually{\PrintIndex}
%
% \section{Implementation}
% This section presents the actual implementation of the package.  For the most part you probaly won't need to refer to it, but every so often you might, especially to work out some error that \LaTeX{} is throwing at you, based on what the commands defined within become once they have been substituted into your document.
%
% \iffalse
%<*package>
% \fi
%
% \iffalse
%
% \fi
%
%    \begin{macrocode}
%

\RequirePackage{array}
\RequirePackage{framed}
\RequirePackage{changepage}
\RequirePackage{amsmath}
\RequirePackage{trimspaces}
\RequirePackage{newfloat}

\newcounter{cpsystems@RuleNum}
%    \end{macrocode}
%
% \begin{environment}{cprulesetfloat}
% A floating environment inside which |cpruleset| environments are to be placed.  This `wrapping' float provides both the floating capability, as well the ability to caption, label and reference |cprulesets|.
%    \begin{macrocode}
\DeclareFloatingEnvironment[name=Ruleset,within=none]{cprulesetfloat}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{cpobjectsfloat}
% A floating environment inside which |cpobjects| environments are to be placed.  This `wrapping' float provides both the floating capability, as well the ability to caption, label and reference |cpobjects|.
%    \begin{macrocode}
\DeclareFloatingEnvironment[name=Objects Group,within=none]{cpobjectsfloat}
%    \end{macrocode}
% \end{environment}
%
% \begin{environment}{cpruleset}
% A wrapper environment in which |cprules| are listed, and which mimics the usual style of presentation for rules:  A lined box with the rules inside it.
%    \begin{macrocode}
\newenvironment{cpruleset}
	{\begin{framed}\begin{adjustwidth}{-1.0em}{-1.0em}
	\renewcommand{\arraystretch}{1.0}\[\begin{array}{lllllr}}
	{\end{array}\]\end{adjustwidth}\end{framed}}
%    \end{macrocode}
% \end{environment}
%
%
% \begin{environment}{cpobjects}
% A wrapper environment in which |cpobjectline|s are listed, imitating a style used in the past:  A lined box with lines of cP~systems objects defined inside it.  Primarily used for illustrating examples.
%    \begin{macrocode}
\newenvironment{cpobjects}{\begin{framed}}{\end{framed}}
%    \end{macrocode}
% \end{environment}
%
%
% \begin{macro}{\cprule}
% For writing out a rule inside a |cpruleset| environment.
% Required arguments are, in order, beginning state name; LHS of rule; the label to be applied to the arrow; the ending state name; the RHS of the rule.
%    \begin{macrocode}
\newcommand{\cprule}[5]{
    \refstepcounter{cpsystems@RuleNum}
    \trim@spaces@noexp{#1 & #2 & \rightarrow_{#3} & #4 & #5 
    	& (\arabic{cpsystems@RuleNum})\\}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cppromoter}
% For specifying promoters as part of a rule.
%    \begin{macrocode}
\newcommand{\cppromoter}[1]{
	\trim@spaces@noexp{& & & & ~ \hspace{0.5cm} ~ | ~ #1 & \\}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cpinhibitor}
%    \begin{macrocode}
% For specifying inhibitors as part of a rule.
\newcommand{\cpinhibitor}[1]{
	\trim@spaces@noexp{& & & & ~ \hspace{0.5cm} ~ \neg ~ #1 & \\}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cpsend}
% Encapsulate a `send' in cP~systems.
% First argument is the object(s) to be sent, and the second argument is the name of the channel the object(s) shall be sent on.
%    \begin{macrocode}
\newcommand{\cpsend}[2]{
	\trim@spaces@noexp{\{#1\}!_{#2}}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cprecv}
% Encapsulate a `receive' in cP~systems.
% First argument is the object(s) to be received, and the second argument is the name of the channel the object(s) shall be received on.
%    \begin{macrocode}
\newcommand{\cprecv}[2]{
	\trim@spaces@noexp{\{#1\}?_{#2}}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cpfunc}
% Command for declaring a cP~systems functor.
% The first argument is the symbol for the functor itself, and the second argument is the objects contained inside the functor.
%    \begin{macrocode}
\newcommand{\cpfunc}[2]{
	\trim@spaces@noexp{#1\big(#2\big)}
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cpobjectsline}
% Used for presenting a group of objects, inside a |cpobjects| environment.
%    \begin{macrocode}
\newcommand{\cpobjectsline}[1]{
	\[#1\]
}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\cpterm}
% Explanation TBF
%    \begin{macrocode}
\newcommand\cpterm[2]{%
\item[$#1$]#2.}%    \end{macrocode}
% \end{macro}
%
%
%
% \iffalse
%</package>
% \fi
%
% \Finale
\endinput
